---
- name: Artfactory absolute path is set
  set_fact:
     artifactoryAbsoluteUrl: "{{artifactoryUrl}}{{artifactName}}"
  no_log: true
  
- name: Find artifact file type
  shell: "echo '{{artifactName}}' |awk -F . '{if (NF>1) {print $NF}}'"
  register: extension
  
#- name: CreateArtifactStore Directory
#  shell: "mkdir -p '{{buildBaseDir}}'/zipDir"
#  when: (extension.stdout == 'zip' )
  
- name: TarFileName is set
  set_fact:
     tarFileName: "{{buildBaseDir}}/tarDir/{{artifactName}}"
  when: (extension.stdout == 'tar' )
     
- name: Download artifact from Artifactory if it is tar
  shell: " mkdir -p '{{buildBaseDir}}'/tarDir | curl -l {{ artifactoryAbsoluteUrl }} -o {{ tarFileName }}"
  when: not(
          (tarFileName is undefined)
          or
          (tarFileName  is none)
          or
          (tarFileName | trim == '')
        )


- name: ZipFileName is set
  set_fact:
     zipFileName: "{{buildBaseDir}}/zipDir/{{artifactName}}"
  when: (extension.stdout == 'zip' )
     
- name: Download artifact from Artifactory if it is zip
  shell: " mkdir -p '{{buildBaseDir}}'/zipDir | curl -l {{ artifactoryAbsoluteUrl }} -o {{ zipFileName }}"
  when: not(
          (zipFileName is undefined)
          or
          (zipFileName  is none)
          or
          (zipFileName | trim == '')
        )

